<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<style>
img {
  max-width: 100%;
  max-height: 100%;
}

button.btn.btn-primary {
   display: none;
}
</style>

<!--**********************************
            Chat box start
        ***********************************-->
		<div class="chatbox">
			<div class="chatbox-close"></div>
			<div class="custom-tab-1">
				<ul class="nav nav-tabs">
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#notes">Notes</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" data-bs-toggle="tab" href="#alerts">알림</a>
					</li>
					<li class="nav-item">
						<a class="nav-link active" data-bs-toggle="tab" href="#chat">채팅</a>
					</li>
				</ul>
				<div class="tab-content">
					<div class="tab-pane fade active show" id="chat" role="tabpanel">
						<div class="card mb-sm-3 mb-md-0 contacts_card dz-chat-user-box">
							<div class="card-header chat-list-header text-center">
<!-- 								<a href="javascript:void(0);"> -->
<!-- 								<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"> -->
								<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
								<rect fill="#000000" x="4" y="11" width="16" height="2" rx="1"/>
								<rect fill="#000000" opacity="1.0" transform="translate(12.000000, 12.000000) rotate(-270.000000) translate(-12.000000, -12.000000) " x="4" y="11" width="16" height="2" rx="1"/>
								</g>
<!-- 								</svg> -->
<!-- 								</a> -->
								<div>
									<h4 class="mb-1" id = "all">채팅목록</h4>
								</div>
<!-- 								<a href="javascript:void(0);"> -->
<!-- 								<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"> -->
								<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><rect x="0" y="0" width="24" height="24"/><circle fill="#000000" cx="5" cy="12" r="2"/>
								<circle fill="#000000" cx="12" cy="12" r="2"/>
								<circle fill="#000000" cx="19" cy="12" r="2"/>
								</g>
<!-- 								</svg> -->
<!-- 								</a> -->
							</div>
							<div class="card-body contacts_body p-0 dz-scroll  " id="DZ_W_Contacts_Body">
								<table class="table text-center" id="infoTable" style="overflow:auto;">
						    		<tbody id="tbody">
									   <tr id=chatList>
									   	<td></td>
									   	<td></td>
									   </tr>
						    		</tbody>
					    		</table>
							</div>
						</div>
						
				<!-- 채팅대상 클릭시 채팅내용-->
                  <div class="card chat dz-chat-history-box d-none">
                     <div class="card-header chat-list-header text-center">
                        <a href="javascript:void(0);" class="dz-chat-history-back">
                           <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><polygon points="0 0 24 0 24 24 0 24"/><rect fill="#000000" opacity="0.3" transform="translate(15.000000, 12.000000) scale(-1, 1) rotate(-90.000000) translate(-15.000000, -12.000000) " x="14" y="7" width="2" height="10" rx="1"/><path d="M3.7071045,15.7071045 C3.3165802,16.0976288 2.68341522,16.0976288 2.29289093,15.7071045 C1.90236664,15.3165802 1.90236664,14.6834152 2.29289093,14.2928909 L8.29289093,8.29289093 C8.67146987,7.914312 9.28105631,7.90106637 9.67572234,8.26284357 L15.6757223,13.7628436 C16.0828413,14.136036 16.1103443,14.7686034 15.7371519,15.1757223 C15.3639594,15.5828413 14.7313921,15.6103443 14.3242731,15.2371519 L9.03007346,10.3841355 L3.7071045,15.7071045 Z" fill="#000000" fill-rule="nonzero" transform="translate(9.000001, 11.999997) scale(-1, -1) rotate(90.000000) translate(-9.000001, -11.999997) "/></g></svg>
                        </a>
                        <div>
                           <h4 class="mb-1" id = "content"></h4>
                        </div>                     
                        <div class="dropdown">
                           <a href="javascript:void(0);" data-bs-toggle="dropdown" aria-expanded="false"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="18px" height="18px" viewBox="0 0 24 24" version="1.1"><g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><rect x="0" y="0" width="24" height="24"/><circle fill="#000000" cx="5" cy="12" r="2"/><circle fill="#000000" cx="12" cy="12" r="2"/><circle fill="#000000" cx="19" cy="12" r="2"/></g></svg></a>
                           <ul class="dropdown-menu dropdown-menu-end">
                              <li class="dropdown-item"><i class="fa fa-user-circle text-primary me-2"></i>프로필</li>
                              <li class="dropdown-item"><i class="fa fa-users text-primary me-2"></i> Add to btn-close friends</li>
                              <li class="dropdown-item"><i class="fa fa-plus text-primary me-2"></i> Add to group</li>
                              <li class="dropdown-item"><i class="fa fa-ban text-primary me-2"></i> Block</li>
                           </ul>
                        </div>
                     </div>
                     
                     <!-- 채팅내용-->
                     <div class="card-body msg_card_body dz-scroll" id="DZ_W_Contacts_Body3">
                        <!-- ////////////////////////////////  -->
                        <!-- 채팅 받기 -->
                        
                     	<div class="d-flex justify-content-start mb-4">
                           <div class="msg_cotainer" id = "other">
                              <span class="msg_time"></span>
                           </div>
                        </div>
                     
                        <!-- ////////////////////////////////  -->
                        <!-- 채팅주기 -->
                         <div class="d-flex justify-content-end mb-4">
                           	<div class="msg_cotainer_send" id="mine">
								<span class="msg_time_send"></span>
							</div>
                        </div>
                     </div>
                     <!-- 채팅 내용 작성, 보내기 -->
                     <div class="card-footer type_msg">
                        <div class="input-group">
                           <textarea id = "inputChat" class="form-control" placeholder="메세지 입력 후 엔터"></textarea>
                           <div class="input-group-append">
							<div class="input-group-append">
							    <label for="inputFileChat" class="input-group-text">파일 <i class="fas fa-file"></i></label>
							    <input type="file" id="inputFileChat" style="display: none;">
							</div>
							<button onclick = "send()" type="button" class="btn btn-primary"></button>
                           </div>
                        </div>
                     </div>
                  </div>
				</div>
			</div>
		</div>
	</div>	
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-e5Rs2a6JOoSwgj9X6yHg6DnL8BZIDf2G07JwZjxLpYg8PL1DUYHJzlD9Xj+v3qgy/ljjPzBOlXB/Kmz+hW7Zw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script type= text/javascript>
var ws;
var studyCode;
window.onload = function() {
    openWebSocket();
};

function openWebSocket() {
    ws = new WebSocket("ws://192.168.34.79/echo.do");

    ws.onopen = function (event) {
    	console.log("웹소켓 열림 >> " , event)
        if (event.data === undefined) {
            return;
        }
    };
    ws.onclose = function(event){
        console.log("대화 종료");
    }
    
    $('#inputChat').focus();
    ws.onmessage = function(event){
    	console.log("onmessage", event.data);
    	
        
     var sender = event.data.split(' : ')[0];
     var msg = event.data.split(' : ')[1];	
    	

	 let str = "";
 		
	 	// 채팅 내용을 화면에 뿌려줌
	     if (sender === '<나>') {
	         str += '<div class="d-flex justify-content-end mb-4">';
	         str += '<div class="msg_cotainer_send" id="mine">';
	         str += `<div>\${msg}</div>`;
	         str += '<span>나</span>';
	         str += '</div>';
	         str += '</div>';
	     } else {
	         str += '<div class="d-flex justify-content-start mb-4">';
	         str += '<div class="msg_cotainer" id="other">';
	         str += `<div>\${msg}</div>`;
	         str += `<span>\${sender}</span>`;
	         str += '</div>';
	         str += '</div>';
	     }
	     $("#DZ_W_Contacts_Body3").append(str);
	     scrollToBottom();
     
     
    }
	function scrollToBottom() {
	    var chatHistory = document.getElementById("DZ_W_Contacts_Body3");
	    chatHistory.scrollTop = chatHistory.scrollHeight;
	}
    
}    
function send() {
    var inputChat = document.getElementById('inputChat');
    var message = inputChat.value;
    var stuId =  ${userInfo.userId};
    var stuName = '${sessionScope.userInfo.studentVO.stuNameKo}'
    var socketMsg = message + "," + stuName
    if (message) {
      //ws.send(socketMsg);
        inputChat.value = '';
        
        // 메세지 입력하면 insert하는 ajax
        if(message != null) {
		    	$.ajax({
					type:'post',
					url:'/chat/chatting',
					data:{
						stuId : stuId,
		   		    	chatCont : message,
		   		    	studyCode : studyCode,
		   		    	chatDate : new Date().toTimeString().split(' ')[0]
					},
					success:function(){
					  	let msg = JSON.stringify(socketMsg);
					 	let mmsg = msg.substring(1,msg.length-1);
   		    		ws.send(mmsg);	// websocket handler로 전송(서버로 전송)
					}
				})
	    }
    }
}    
    document.getElementById("inputChat").addEventListener("keydown", function(event) {
  	  if (event.key === "Enter") {
  		 send();
  	     event.preventDefault();
  	  }
	});

$(function() {
		var obj = {
			userId : '${userInfo.userId}'
		}
		console.log("obj >>>> ", obj);
		
		// 채팅(스터디룸) 리스트 불러오는 ajax
		$.ajax({
			type :"post",
			url : "/chat/list",
			dataType : "json",
			data: obj,
			 success: function (res) {
				 console.log("res >>> ",res);
					$("#infoTable > tbody").empty();
					if(res.length > 0){
						$.each(res, function(index, item){
							index = index + 1;
							let str = "<tr id='chatList'>";
							str += `<td colspan='2' class='siGubun' id='chatDetail' data-id="\${item.stuId}" data-code="\${item.studyCode}" data-title="\${item.studyTitle}">\${item.studyTitle}</td>`;
							str += "</tr>"
							$("#infoTable > tbody").append(str);
						});
					}
			 },
			error: function(jqXHR, textStatus, errorThrown) {
				swal("ERROR : " + textStatus + " : " + errorThrown);
			}
		});
		// 불러온 리스트를 화면에 뿌려줌
		$("#infoTable > tbody").on("click", "#chatDetail", function(){
			
	        $(".contacts_card.dz-chat-user-box").addClass("d-none");
	        // Display the chat content area
	        $(".card.chat.dz-chat-history-box").removeClass("d-none");
			studyCode = $(this).data("code");
			const studyTitle = $(this).data("title");
			
			
	        $("h4#content").text(studyTitle);
	        console.log("studyTitle", studyTitle);
	       
			const obj = {
				'studyCode' : studyCode
			}
			console.log("obj >>>> ", obj);
			$.ajax({
			    type: "post",
			    url: "/chat/detail",
			    dataType: "json",
			    data: obj,
			    success: function(res) {
			        console.log("res >>> ", res);
			        $("#DZ_W_Contacts_Body3").html("");

			        if (res.length > 0) {
			            $.each(res, function(index, item) {
			            	const stuId = `\${item.stuId}`;
			    			const myId =  ${userInfo.userId};
			                let str = "";

			                if (myId == stuId) {
			                    str += '<div class="d-flex justify-content-end mb-4">';
			                    str += '<div class="msg_cotainer_send" id="mine">';
			                    str += `<div>\${item.chatCont}</div>`;
			                    str += `<span>나</span>`;
			                    str += '</div>';
			                    str += '</div>';
			                } else {
			                    str += '<div class="d-flex justify-content-start mb-4">';
			                    str += '<div class="msg_cotainer" id="other">';
			                    str += `<div>\${item.chatCont}</div>`;
			                    str += `<span>\${item.stuNameKo}</span>`;
			                    str += '</div>';
			                    str += '</div>';
			                }
			               
			                $("#DZ_W_Contacts_Body3").append(str);
			            });
			        }
			        $("#DZ_W_Contacts_Body3").append("--------여기까지 읽었습니다--------");
			        scrollToBottom();           
			    },
			    error: function(jqXHR, textStatus, errorThrown) {
			        swal("ERROR: " + textStatus + " : " + errorThrown);
			    }
			});
	});
});
	function scrollToBottom() {
	    var chatHistory = document.getElementById("DZ_W_Contacts_Body3");
	    chatHistory.scrollTop = chatHistory.scrollHeight;
	}

var inputFileChat = $("#inputFileChat");

inputFileChat.on("change", function(event){
	console.log("change event,,");
	
	var files = event.target.files;
	var file = files[0];
	var str = "";
	var stuId = '${userInfo.userId}'
	console.log(file);
	
		
		// ajax로 파일을 컨트롤 시 formData를 이용한다.
		// append() 이용
		var formData = new FormData();
		// key : value 형태로 값이 추가된다.
		formData.append("file", file);
		
		// formData는 key/value 형식으로 데이터가 저장된다.
		// dataType : 응답(response) 데이터를 내보낼 때 보내줄 데이터 타입이다.
		// processData : 데이터 파라미터를 data라는 속성으로 넣는데 제이쿼리 내부적으로 쿼리스트링을 구성한다.
		// 				파일 전송의 경우 쿼리 스트링을 사용하지 않으므로 해당 설정을 false한다.
		// contentType : content-Type 설정 시 사용하는데 해당 설정의 기본값은 "application/x-www-form-urlencoded; charset=utf-8"이다
		// request 요청에서 content-Type을 확인해보면 "multipart/form-data; boundary=---WebkitFormBoundary7Taxt434B
		// 과 같은 값을 전송되는 걸 확인할 수 있다.
		
		$.ajax({
			type : "post",
			url : "/chat/uploadFile",
			data : formData,
			dataType : "text",
			processData : false,
			contentType : false,
			success : function(data){
				//alert(data);
				
				if(checkImageType(data)) { // 이미지이면 이미지 태그를 이용한 출력형태
					str += "<div>";
					str += "<a href = '/chat/displayFile?fileName="+ data + "'>";
					str += "<img src = '/chat/displayFile?fileName=" + getThumbnailName(data)+ "'/>";
					str += "</a>";
					str += "</div>";
					$.ajax({
	   					type:'post',
	   					url:'/chat/chatting',
	   					data:{
	   						stuId : stuId,
			   		    	studyCode : studyCode,
	   						chatCont:"<a href = '/chat/displayFile?fileName="+ data + "' target='_blank' ><img src = '/chat/displayFile?fileName=" + getThumbnailName(data)+ "'/></a>"
	   					},
	   					success:function(){
	   						
	   					}
	   				})
				} else { // 파일이면 파일명에 대한 링크로만 출력
					str += "<div>";
					str += "<a href ='/chat/displayFile?fileName="+data+"'>" +getOriginalName(data) + "</a>";
					str += "</div>";
					$.ajax({
	   					type:'post',
	   					url:'/chat/chatting',
	   					data:{
	   						stuId : stuId,
			   		    	studyCode : studyCode,
	   						chatCont : "<a href ='/ajax/displayFile?fileName="+data+"'>" +getOriginalName(data) + "</a>"
	   					},
	   					success:function(){
	   						
	   					}
	   				})
				}
			    var stuName = '${sessionScope.userInfo.studentVO.stuNameKo}';
				var socketMsg = str + "," + stuName;
				 // 메세지 입력하면 insert하는 ajax
		        if(str != null) {
				    	$.ajax({
							type:'post',
							url:'/chat/chatting',
							data:{
								stuId : stuId,
				   		    	chatCont : str,
				   		    	studyCode : studyCode,
				   		    	chatDate : new Date().toTimeString().split(' ')[0]
							},
							success:function(){
							  	let msg = JSON.stringify(socketMsg);
							 	let mmsg = msg.substring(1,msg.length-1);
		   		    		ws.send(mmsg);	// websocket handler로 전송(서버로 전송)
							}
						})
						scrollToBottom();
			    }
				   
				
				
			}
		});
	   
});


function getOriginalName(fileName){
	if(checkImageType(fileName)){
		return;
	}		
	var idx = fileName.indexOf("_") + 1;
	return fileName.substr(idx);
}
function getThumbnailName(fileName){
	var front = fileName.substr(0,12);
	var end = fileName.substr(12);
	
	console.log("front : " + front);
	console.log("end : " + end);
	
	return front + "s_" + end;
}

function checkImageType(fileName){
	var pattern = /jpg|gif|png|jpeg/i;
	return fileName.match(pattern); // 패턴과 일치하면 true (너 이미지 맞구나?)
}



</script>







