package kr.or.ddit.exam.service.impl;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import kr.or.ddit.common.ServiceResult;
import kr.or.ddit.exam.service.ExamService;
import kr.or.ddit.exam.vo.ExamListVO;
import kr.or.ddit.exam.vo.ExamSelectVO;
import kr.or.ddit.exam.vo.ExamVO;
import kr.or.ddit.mapper.ExamMapper;

@Service
public class ExamServiceImpl implements ExamService {

	@Inject
	private ExamMapper examMapper;
	
	// 시험정보에 과목정보 뿌리기
	@Override
	public List<ExamVO> selectExamSubjectList(String proId) {
		return examMapper.selectExamSubjectList(proId);
	}


	@Override
	public void insertExam(ExamVO examVO) {
		
		// 문제들
		for (int i = 0; i < examVO.getExamList().size(); i++) {	// 문제 갯수만큼 반복 
			// 1번 문제가 먼저 출력 (순차적으로)
			ExamListVO examList = examVO.getExamList().get(i);
			
			ExamListVO listVO = new ExamListVO();
			listVO.setExNum(i+1);
			listVO.setExamGubun(examVO.getExamGubun());
			listVO.setLecCode(examVO.getLecCode());
			listVO.setExContent(examVO.getExamList().get(i).getExContent());
			listVO.setExSolution(examVO.getExamList().get(i).getExSolution());
			examMapper.insertExamQuestions(listVO);
			
			for (int j = 0; j < examList.getExamSelectList().size(); j++) {	// 문제당 보기만큼 반복
				// 1번 문제에 대한 보기들 (순차적으로)
				ExamSelectVO selectVO = new ExamSelectVO();
				selectVO.setExamGubun(examVO.getExamGubun());
				selectVO.setExNum(i+1);	// 1번 문제 
				selectVO.setExsNum(j+1);	// 1번 보기, 2번 보기,,
				selectVO.setLecCode(examVO.getLecCode());
				selectVO.setExsContent(examVO.getExamList().get(i).getExamSelectList().get(j).getExsContent());
				examMapper.insertExamMultipleChoice(selectVO);
			}
		}

	}

	// 한 강의에 해당하는 문제 정보(질문+보기) 가져오기
	@Override
	public List<ExamVO> selectExamInfo(ExamVO examVO) {
		
		return examMapper.selectExamInfo(examVO);
	}


	// 문제수정
	@Override
	public void examUpdate(ExamVO examVO) {
		
		// 1번 문제에 대한 제목, 답
		// 1번 문제에 대한 보기 1,2,3,4 값 모두를 가져와야한다.
		// 내가 수정할 과목에 문제(1개)
		for(int i=0; i < examVO.getExamList().size(); i++) {
			ExamListVO examListVO = examVO.getExamList().get(i); 
			// 문제 내용(1번 문제 제목)을 수정, 답도 수정
			examMapper.updateExamList(examListVO);
			for (int j = 0; j < examListVO.getExamSelectList().size(); j++) {
				ExamSelectVO selectVO = examListVO.getExamSelectList().get(j);
				examMapper.updateExamSelect(selectVO);
			}
		}
		
		// ajax에서 데이터를 만들어줄때,
		// [
		//		examVO = {
		//			examListVO = {
		//				[]
		//			}
		//		}
		//
	}






}
