<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>

<style>
/* ======== Calendar ======== */
.my-calendar {
	width: 100%;
	/*     margin: 30px; */
	padding: 20px 20px 30px;
	text-align: center;
	/* font-weight: 800; */
	/* 	border: 1px solid #ddd; */
	cursor: default;
}

/* .my-calendar .clicked-date { */
/* 	border-radius: 25px; */
/* 	/*     margin-top: 36px; */
* /
	/* 	float: left; */
	/* 	width: 42%; */
	/* 	padding: 46px 0 26px; */
	/* 	background: #fafafa; */
	/* } */ 

.my-calendar .calendar-box {
	float: right;
	width: 58%;
	padding-left: 30px;
}

.clicked-date .cal-day {
	font-size: 24px;
}

.clicked-date .cal-date {
	font-size: 120px;
}

.ctr-box {
	padding: 0 12px;
	margin-bottom: 20px;
	font-size: 18px;
	color: #295b95;
}

.ctr-box .btn-cal {
	position: relative;
	float: left;
	width: 25px;
	height: 25px;
	margin-top: 5px;
	font-size: 16px;
	cursor: pointer;
	border: none;
	background: none;
	color: #295b95;
}

.ctr-box .btn-cal:after {
	content: '<';
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	line-height: 25px;
	font-weight: bold;
	font-size: 20px;
}

.ctr-box .btn-cal.next {
	float: right;
}

.ctr-box .btn-cal.next:after {
	content: '>';
}

.cal-table {
	width: 100%;
}

.cal-table th {
	width: 14.2857%;
	padding-bottom: 15px;
	font-size: 16px;
	font-weight: 900;
}

.cal-table td {
	padding: 3px 0;
	/*     height: 50px; */
	height: 40px;
	font-size: 15px;
	vertical-align: middle;
}

.cal-table td.day {
	position: relative;
	cursor: pointer;
}

.cal-table td.today {
	background: #ffd255;
	border-radius: 50%;
	color: #fff;
}

.cal-table td.day-active {
	background: #ff8585;
	border-radius: 50%;
	color: #fff;
}

.cal-table td.has-event:after {
	content: '';
	display: block;
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100%;
	height: 4px;
	background: #FFC107;
}
</style>

<div class="row">
	<!-- /////////////////////////////////////////////////////// 학사일정 미니달력 ///////////////////////////////////////////////////////-->
	<div class="col-lg-3">
		<div class="card">
			<div class="card-header border-0 pb-0">
				<div class="card-title fw-bold" style="color: #295b95;">
					&nbsp;&nbsp;&nbsp;<i class="fa-regular fa-calendar-check"></i>&nbsp;&nbsp;&nbsp;학사
					일정
				</div>
			</div>
			<div class="card-body pt-0">
				<!-- ========================== 달력 ========================== -->
				<div class="my-calendar clearfix">
					<!-- 								<div class="clicked-date"> -->
					<!-- 									<div class="cal-day"></div> -->
					<!-- 									<div class="cal-date"></div> -->
					<!-- 								</div> -->
					<div class="calendar-box">
						<div class="ctr-box clearfix">
							<button type="button" title="prev" class="btn-cal prev">
							</button>
							<strong><span class="cal-year"></span>. <span
								class="cal-month"></span></strong>
							<button type="button" title="next" class="btn-cal next">
							</button>
						</div>
						<table class="cal-table">
							<thead>
								<tr style="border-bottom: 1px solid #efefef;">
									<th style="color: #f95959;">일</th>
									<th>월</th>
									<th>화</th>
									<th>수</th>
									<th>목</th>
									<th>금</th>
									<th style="color: #005792;">토</th>
								</tr>
							</thead>
							<tbody class="cal-body" style="border-bottom: 1px solid #efefef;"></tbody>
						</table>
					</div>
				</div>
				<!-- 일정 표현 -->
				<div class="card-body pt-0" style="padding-left: 30px;"
					id="miniSchedule">
					<!-- 						<div class="fs-4" style="color:#295b95;" id="scheduleDate"></div> -->
					<!-- 						&nbsp;&nbsp;&nbsp;&nbsp; -->
					<!-- 						<div class="fs-4" id="scheduleContent"></div> -->
				</div>
			</div>
			<!-- card-body end -->
		</div>
	</div>
	<!-- /////////////////////////////////////////////////////// 학사일정 미니달력 ///////////////////////////////////////////////////////-->
	
	
	<!-- /////////////////////////////////////////////////////// 게시판  ///////////////////////////////////////////////////////-->
	<div class="col-lg-7">
				<div class="card">
			<div class="card-header border-0 pb-0">
				<div class="card-title fw-bold" style="color: #295b95;">
					일반 공지사항
				</div>
			</div>
			
			<div class="card-body">
				<div class="table-responsive">
					<table class="table">
						<thead class="thead-info">
							<tr>
								<th scope="col">#</th>
								<th scope="col">제목</th>
								<th scope="col">내용</th>
								<th scope="col">작성일</th>
							</tr>
						</thead>
						<tbody>
							<c:set value="0" var="cnt"/>
							<c:forEach items="${boardList }" var="notice" varStatus="stat">
					        	<c:if test="${notice.cateCode eq 'n001'}" >
					        		<c:set value="${cnt+1 }" var="cnt"/>
					        		<c:if test="${cnt < 6 }">
					              <tr style="width: 100%;">
					                  <td style="width: 65%;">${notice.boNo }</td>
					                  <td style="width: 65%;">${notice.boTitle }</td>
					                  <td style="width: 65%;">${notice.boContent }</td>
					                  <td>${fn:substring(notice.boWriteDate, 0, 10) }</td>
					              </tr>
					        		</c:if>
					            </c:if>
				            </c:forEach>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
	<!-- /////////////////////////////////////////////////////// 학사일정 미니달력 ///////////////////////////////////////////////////////-->
	
	
</div>
<script type="text/javascript">
	
	//================================
	//START YOUR APP HERE
	//================================
	const init = {
		monList: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
		dayList: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
		today: new Date(),
		monForChange: new Date().getMonth(),
		activeDate: new Date(),
		getFirstDay: (yy, mm) => new Date(yy, mm, 1),
		getLastDay: (yy, mm) => new Date(yy, mm + 1, 0),
	
		nextMonth: function () {
			let d = new Date();
			d.setDate(1);
			d.setMonth(++this.monForChange);
			this.activeDate = d;
			return d;
		},
		prevMonth: function () {
			let d = new Date();
			d.setDate(1);
			d.setMonth(--this.monForChange);
			this.activeDate = d;
			return d;
		},
		addZero: (num) => (num < 10) ? '0' + num : num,
		activeDTag: null,
		getIndex: function (node) {
			let index = 0;
			while (node = node.previousElementSibling) {
				index++;
			}
			return index;
		}
	};
	
	
	
	const $calBody = document.querySelector('.cal-body');
	const $btnNext = document.querySelector('.btn-cal.next');
	const $btnPrev = document.querySelector('.btn-cal.prev');
	
	/**
	* @param {number} date
	* @param {number} dayIn
	*/
	function loadDate(date, dayIn) {
// 		document.querySelector('.cal-date').textContent = date;
// 		document.querySelector('.cal-day').textContent = init.dayList[dayIn];
	}
	
	/**
	* @param {date} fullDate
	*/
	function loadYYMM(fullDate) {
		let yy = fullDate.getFullYear();
		let mm = fullDate.getMonth();
		let firstDay = init.getFirstDay(yy, mm);
		let lastDay = init.getLastDay(yy, mm);
		let markToday;  // for marking today date
	
		if (mm === init.today.getMonth() && yy === init.today.getFullYear()) {
			markToday = init.today.getDate();
		}
	
		document.querySelector('.cal-month').textContent = init.monList[mm];
		document.querySelector('.cal-year').textContent = yy;
	
		let trtd = '';
		let startCount;
		let countDay = 0;
		for (let i = 0; i < 6; i++) {
			trtd += '<tr>';
			for (let j = 0; j < 7; j++) {
				if (i === 0 && !startCount && j === firstDay.getDay()) {
					startCount = 1;
				}
				if (!startCount) {
					trtd += '<td>'
				} else {
					let fullDate = yy + '-' + init.addZero(mm + 1) + '-' + init.addZero(countDay + 1);
					trtd += '<td class="day';
					trtd += (markToday && markToday === countDay + 1) ? ' today" ' : '"';
					trtd += `onclick='f_clickedDay(this)' data-date="\${countDay + 1}" data-fdate="\${fullDate}">`;
				}
				trtd += (startCount) ? ++countDay : '';
				if (countDay === lastDay.getDate()) {
					startCount = 0;
				}
				trtd += '</td>';
			}
			trtd += '</tr>';
		}
		$calBody.innerHTML = trtd;
	}
	
	/**
	* @param {string} val
	*/
	function createNewList(val) {
		let id = new Date().getTime() + '';
		let yy = init.activeDate.getFullYear();
		let mm = init.activeDate.getMonth() + 1;
		let dd = init.activeDate.getDate();
		const $target = $calBody.querySelector(`.day[data-date="${dd}"]`);
	
		let date = yy + '-' + init.addZero(mm) + '-' + init.addZero(dd);
	
		let eventData = {};
		eventData['date'] = date;
		eventData['memo'] = val;
		eventData['complete'] = false;
		eventData['id'] = id;
		init.event.push(eventData);
		$todoList.appendChild(createLi(id, val, date));
	}
	
	loadYYMM(init.today);
	loadDate(init.today.getDate(), init.today.getDay());
	
	$btnNext.addEventListener('click', () => loadYYMM(init.nextMonth()));
	$btnPrev.addEventListener('click', () => loadYYMM(init.prevMonth()));
	
	$calBody.addEventListener('click', (e) => {
		if (e.target.classList.contains('day')) {
			if (init.activeDTag) {
				init.activeDTag.classList.remove('day-active');
			}
			let day = Number(e.target.textContent);
			loadDate(day, e.target.cellIndex);
			e.target.classList.add('day-active');
			init.activeDTag = e.target;
			init.activeDate.setDate(day);
			//   reloadTodo();
		}
		
	});
	
	function f_clickedDay(p_this) {
		
		let selectedDate = p_this.getAttribute("data-fdate");
		console.log("selectedDate ::", selectedDate);
		
		let selectedDateOfYear = selectedDate.substr(0,4);
		let selectedDateOfMonth = selectedDate.substr(5,2);
		let selectedDateOfDay = selectedDate.substr(-1,2);
		
		console.log("선택한 날짜 년도  >>",selectedDateOfYear);
		console.log("선택한 날짜 월  >>", selectedDateOfMonth);
		console.log("선택한 날짜 일 >>", selectedDateOfDay);
		
		let scheduleContent = document.querySelector("#scheduleContent");
		let scheduleDate = document.querySelector("#scheduleDate");
		
		let data = {
			datetime : selectedDate
		}
		
		let xhr = new XMLHttpRequest();
        xhr.open("post", "/schedule/miniSchedule", true);
        xhr.setRequestHeader("Content-Type", "application/json;charset=utf-8");
        xhr.onreadystatechange = () => {
            if (xhr.readyState == 4 && xhr.status == 200) {
                console.log("온값: ", xhr.responseText);
                
                let listArr = JSON.parse(xhr.responseText);
                console.log("변환체킁: ", listArr);

                let html = "";
                if(listArr.length > 0){
					html += "	<div class='row'>";
					html += "		<div class='col-md-12'>";
					html += "			<table class='table'>";
					html += "				<tr>";
					html += "					<th>일자</th>";
					html += "					<th>내용</th>";
					html += "				</tr>";
	                for(let i=0; i < listArr.length; i++){
						let usSdate = listArr[i].usSdate;
						let usEdate = listArr[i].usEdate;
						let usContent = listArr[i].usContent;
						let sdate = usSdate.substr(0, 10);
						let edate = usEdate.substr(0, 10);
						html += "			<tr>";
						html += "				<td>";
						html += "					<font color='#295b95'>" + 
							sdate.substr(5,6).split("-")[0] + ". " + sdate.substr(5,6).split("-")[1] + " ~ " +
							edate.substr(5,6).split("-")[0] + ". " + edate.substr(5,6).split("-")[1] + 
													"</font>";
						html += "				</td>";
						html += "				<td>";
						html += "					" + usContent;
						html += "				</td>";
						html += "			</tr>";
	                }
					html += "			</table>";
					html += "		</div>";
					html += "	</div>";
                }
                miniSchedule.innerHTML = html;	
            }
        }
        // 데이터 json으로 보내기
        xhr.send(JSON.stringify(data));
        
	}
</script>