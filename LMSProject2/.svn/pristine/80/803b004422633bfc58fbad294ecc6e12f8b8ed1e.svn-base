package kr.or.ddit.user.controller;

import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.academic.vo.AcademicVO;
import kr.or.ddit.common.ServiceResult;
import kr.or.ddit.user.service.IUserService;
import kr.or.ddit.user.vo.StudentVO;
import kr.or.ddit.user.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class CrudUserController {

	@Autowired
	private IUserService userService;
	
	
	@GetMapping("/STU/detail")
	public String stuDetail(HttpSession session, Model model) {
		
		StudentVO stuVO = (StudentVO) session.getAttribute("stuVO");
		AcademicVO acaVO = (AcademicVO) session.getAttribute("acaVO");
		
		model.addAttribute("stuVO", stuVO);
		model.addAttribute("acaVO", acaVO);
	
		return "user/stuPage";
	}
	
	@RequestMapping(value ="/STU/update", method = RequestMethod.POST)
	@ResponseBody
	public String stuUpdate(@RequestParam Map<String,Object> param, HttpSession session){
//		String stuPhone = (String) param.get("stuPhone");
//		String stuEmail = (String) param.get("stuEmail");
//		String stuPostcode = (String) param.get("stuPostcode");
//		String stuAddr1 = (String) param.get("stuAddr1");
//		String stuBank = (String) param.get("stuBank");
//		
//		UserVO userVO = (UserVO) session.getAttribute("userInfo");
//		String userId = userVO.getUserId();
//		param.put("stuId", userId);
//		log.info(""+stuPhone+stuAddr1+stuEmail+stuPostcode+stuAddr1+stuBank+userId);
//		ServiceResult result = userService.stuUpdate(param);
//		log.info("result >>> " , result);
		
		log.info("" + param.get("stuId"));
		ServiceResult result = null;
		result = userService.stuUpdate(param);
		UserVO user = (UserVO) session.getAttribute("userInfo");
		
		if(result.equals(ServiceResult.OK)) {
			result = userService.userCheck(user, session);
		}
		
		return "ok";
	}

}
