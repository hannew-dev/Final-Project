package kr.or.ddit.user.controller;

import java.util.Map;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.common.ServiceResult;
import kr.or.ddit.user.service.IUserService;
import kr.or.ddit.user.vo.EmployeeVO;
import kr.or.ddit.user.vo.ProfessorVO;
import kr.or.ddit.user.vo.StudentVO;
import kr.or.ddit.user.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class LoginController {

	@Autowired
	private IUserService userService;

	@GetMapping("/loginForm")
	public String loginForm() {
		return "login";
	}

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(UserVO userVO, HttpSession session, Model model) {
		log.info("신분 : " + userVO.getUserType());
		log.info("아이디 : " + userVO.getUserId());
		log.info("비밀번호 : " + userVO.getPassword());

		ServiceResult result = null;
		String goPage = "";

		result = userService.userCheck(userVO, session);

		if (result.equals(ServiceResult.OK)) {
			goPage = "success";
		} else {
			goPage = "fail";
		}

		return goPage;
	}

	@GetMapping("/userFind")
	public String userFind() {

		return "userFindForm";
	}

	@PostMapping("/findId")
	@RequestMapping(value = "/findId", method = RequestMethod.POST, produces = "application/text; charset=UTF-8")
	@ResponseBody
	public String findId(@RequestBody Map<String, Object> findMap) {
		log.info(""+findMap.get("userType"));
		log.info(""+findMap.get("userName"));
		log.info(""+findMap.get("userReg1"));
		log.info(""+findMap.get("userReg2"));
		String res = null;
		String userId = userService.getId(findMap);
		
		if(StringUtils.isNotEmpty(userId)) {
			res = userId;
		}else if(userId == null) {
			res = "사용자 정보가 존재하지 않습니다.";
		}
		return res;
	}
}
